/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kaustav
 */
import java.lang.String;
import java.util.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class FrontPage extends javax.swing.JFrame {

    /**
     * Creates new form FrontPage
     */
    public FrontPage() {
        initComponents();
    }
    BasicJTable tab1=new BasicJTable("Book Database");
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        checkin = new javax.swing.JRadioButton();
        checkout = new javax.swing.JRadioButton();
        Suid = new javax.swing.JTextField();
        Buid = new javax.swing.JTextField();
        issue_date = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message1 = new javax.swing.JTextArea();
        confirm = new javax.swing.JButton();
        done = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        show = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 30)); // NOI18N
        jLabel1.setText("LIBRARY MANAGER");

        reset.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        reset.setText("RESET");
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(249, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(148, 148, 148)
                .addComponent(reset)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        checkin.setText("BOOK ISSUE");
        checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinActionPerformed(evt);
            }
        });

        checkout.setText("BOOK RETURN");
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });

        Suid.setBackground(new java.awt.Color(204, 204, 204));

        Buid.setBackground(new java.awt.Color(204, 204, 204));

        issue_date.setEditable(false);
        issue_date.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setText("Student UID");

        jLabel3.setText("BOOK ID");

        jLabel4.setText("Issue Date");
        jLabel4.setToolTipText("");

        message1.setEditable(false);
        message1.setColumns(20);
        message1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        message1.setRows(5);
        jScrollPane1.setViewportView(message1);

        confirm.setText("OK");
        confirm.setToolTipText("");
        confirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmMouseClicked(evt);
            }
        });

        done.setText("RETURN");
        done.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doneMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel5.setText("BOOK LIST");

        show.setText("SHOW");
        show.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(checkin))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(confirm)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Suid)
                                        .addComponent(Buid)
                                        .addComponent(issue_date, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkout)
                                .addGap(58, 58, 58)
                                .addComponent(done))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(show)
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkin)
                    .addComponent(checkout)
                    .addComponent(done))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Suid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Buid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(issue_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(34, 34, 34)
                        .addComponent(confirm))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(show))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinActionPerformed
        
        checkout.setEnabled(false);
        Suid.setEditable(true);
        Buid.setEditable(true);
        issue_date.setText(Cal());
    }//GEN-LAST:event_checkinActionPerformed

    private void confirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmMouseClicked
        if(checkin.isEnabled()){
            if(Suid.getText().equals("") || Buid.getText().equals("") || issue_date.getText().equals("")){
                message1.setText("Field or fields empty.\nFill up all fields");
            }
            else if(CheckID(Suid.getText())==false || CheckID(Buid.getText())==false){
                message1.setText("ID should be numeric");
            }
            else{
                int stdid=Integer.parseInt(Suid.getText());
                int bkid=Integer.parseInt(Buid.getText());
                if(stdid<0 || stdid>500){//only 500 student ids
                    message1.setText("Invalid student ID.\n");
                }
                else if(bkid<0 || bkid>210){//only 210 ids
                    message1.setText("Invalid Book ID");
                }
                else{
                    BookSearch ob=new BookSearch();
                    String Bname=ob.Bookfind(Buid.getText());
                    LibDatabase lib=new LibDatabase();
                    int sid=Integer.parseInt(Suid.getText());
                    lib.newentry(sid,Buid.getText());
                    message1.setText("BOOK NAME:"+Bname+"\n"+"Return Deadline:\n"+CalD());
                }
            }
        }
        else{
            if(!checkout.isEnabled())
                message1.setText("Choose a button!");
        }
    }//GEN-LAST:event_confirmMouseClicked

    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutActionPerformed
        checkin.setEnabled(false);
        Suid.setEditable(true);
        Buid.setEditable(false);
        issue_date.setText("");
        
    }//GEN-LAST:event_checkoutActionPerformed

    private void doneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneMouseClicked
        if(checkout.isEnabled()){
            if(Suid.getText().equals("")){
                message1.setText("Student ID empty");
            }
            else if(CheckID(Suid.getText())==false){
                message1.setText("Non numeric Student ID");
            }
            else{
                int k=Integer.parseInt(Suid.getText());
                if(k<1 || k>500){
                    message1.setText("Student ID not valid");//if id exceeds 500 or is negative
                }
                else{
                    BookSearch ob=new BookSearch();
                    String bk="57";
                    LibDatabase lib=new LibDatabase();
                    lib.delentry(k);
                    message1.setText("Book Returned: "+ob.Bookfind(bk)+"\n");
                }
            }
        }
        else{
            if(!checkin.isEnabled())
                message1.setText("Choose a button!");
        }
    }//GEN-LAST:event_doneMouseClicked

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        //con.close();
        this.setVisible(false);
        new FrontPage().setVisible(true);
    }//GEN-LAST:event_resetMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new FrontPage().setVisible(true);
    }//GEN-LAST:event_resetActionPerformed

    private void showItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showItemStateChanged
        if (show.isSelected()){  
            show.setText("HIDE");
            tab1.setVisible(true);
        }
        else{  
            show.setText("SHOW");
            tab1.setVisible(false);
        }
    }//GEN-LAST:event_showItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontPage().setVisible(true);
            }
        });
    }
    public String Cal(){
        Calendar calendar = Calendar.getInstance();
        String st=calendar.get(Calendar.DATE)+"-"+calendar.get(Calendar.MONTH)+"-"+calendar.get(Calendar.YEAR)+" ";
        return st;
    }
    public String CalD(){
        Calendar cal=Calendar.getInstance();
        cal.add(Calendar.DATE,15);
        String st=cal.get(Calendar.DATE)+"-"+cal.get(Calendar.MONTH)+"-"+cal.get(Calendar.YEAR)+" ";
        return st;
    }
    boolean CheckID(String id){
        for (char c : id.toCharArray()) {
            if (!Character.isDigit(c))
                return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Buid;
    private javax.swing.JTextField Suid;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton checkin;
    private javax.swing.JRadioButton checkout;
    private javax.swing.JButton confirm;
    private javax.swing.JButton done;
    private javax.swing.JTextField issue_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea message1;
    private javax.swing.JButton reset;
    private javax.swing.JToggleButton show;
    // End of variables declaration//GEN-END:variables
}
